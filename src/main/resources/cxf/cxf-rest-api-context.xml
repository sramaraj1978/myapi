<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:jaxrs="http://cxf.apache.org/jaxrs"
       xmlns="http://www.springframework.org/schema/beans"
       xsi:schemaLocation="http://cxf.apache.org/jaxrs http://cxf.apache.org/schemas/jaxrs.xsd
       	http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd">

    <bean id="jaxrsRestJacksonObjectMapper" class="org.codehaus.jackson.map.ObjectMapper">
        <property name="serializationInclusion">
            <value type="org.codehaus.jackson.map.annotate.JsonSerialize.Inclusion">NON_EMPTY</value>
        </property>
    </bean>
    <bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
        <property name="targetObject" ref="jaxrsRestJacksonObjectMapper" />
        <property name="targetMethod" value="configure" />
        <property name="arguments">
            <list>
                <value type="org.codehaus.jackson.map.DeserializationConfig.Feature">FAIL_ON_UNKNOWN_PROPERTIES</value>
                <value>false</value>
            </list>
        </property>
    </bean>

    <bean id="jsonProvider" class="org.codehaus.jackson.jaxrs.JacksonJsonProvider">
        <property name="mapper" ref="jaxrsRestJacksonObjectMapper"/>
    </bean>
    
    <bean id="transactionsDetailsService" class="com.inter.transactions.service.TransactionsDetailsService">
        <constructor-arg value="${api.endpoint}" />
        <constructor-arg value="${api.getalltransactions}" />
    </bean>

    <bean id="transactionsDetailsFilteredService" class="com.inter.transactions.service.TransactionsDetailsFilteredService">
        <constructor-arg value="${api.endpoint}" />
        <constructor-arg value="${api.getalltransactions}" />
    </bean>

    <bean id="swaggerResourceJSON" class="com.wordnik.swagger.jaxrs.listing.ApiListingResourceJSON" />
    <bean id="resourceWriter" class="com.wordnik.swagger.jaxrs.listing.ResourceListingProvider" />
    <bean id="apiWriter" class="com.wordnik.swagger.jaxrs.listing.ApiDeclarationProvider" />
    <bean id="gZipInterceptorOut" class="org.apache.cxf.transport.common.gzip.GZIPOutInterceptor" />

    <bean id="swaggerConfig" class="com.wordnik.swagger.jaxrs.config.BeanConfig">
        <property name="resourcePackage" value="com.inter.transactions" />
        <property name="version" value="2.0" />
        <property name="basePath" value="/" />
        <property name="title" value="Transactions" />
        <property name="description" value="Services for the UI" />
        <property name="scan" value="true" />
    </bean>

    <jaxrs:server id="restSwaggerContainerBase" address="/swagger">
        <jaxrs:serviceBeans>
            <ref bean="swaggerResourceJSON" />
        </jaxrs:serviceBeans>
        <jaxrs:providers>
            <ref bean="resourceWriter" />
            <ref bean="apiWriter" />
            <ref bean="jsonProvider" />
        </jaxrs:providers>
        <jaxrs:inInterceptors>
        </jaxrs:inInterceptors>
        <jaxrs:outInterceptors>
            <ref bean="gZipInterceptorOut" />
        </jaxrs:outInterceptors>
    </jaxrs:server>

    <jaxrs:server id="restContainerBase" address="/">
        <jaxrs:serviceBeans>
        	<ref bean="transactionsDetailsService" />
            <ref bean="transactionsDetailsFilteredService" />
        </jaxrs:serviceBeans>
        <jaxrs:providers>
        	<ref bean="jsonProvider" />
       </jaxrs:providers>
        <jaxrs:inInterceptors>
        </jaxrs:inInterceptors>
        <jaxrs:outInterceptors>
            <ref bean="gZipInterceptorOut" />
        </jaxrs:outInterceptors>
    </jaxrs:server>


    <jaxrs:server id="restContainerProvider" address="/provider">
        <jaxrs:serviceBeans>
            <ref bean="transactionsDetailsService" />
            <ref bean="transactionsDetailsFilteredService" />
        </jaxrs:serviceBeans>
        <jaxrs:providers>
            <ref bean="jsonProvider" />
        </jaxrs:providers>
        <jaxrs:inInterceptors>
        </jaxrs:inInterceptors>
        <jaxrs:outInterceptors>
            <ref bean="gZipInterceptorOut" />
        </jaxrs:outInterceptors>
    </jaxrs:server>

</beans>